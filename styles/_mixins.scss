@import './colors';

@mixin for-size($range) {
  $mobile: 320px;
  $tablet: 768px;
  $desktop: 1280px;

  @if $range==mobile {
    @media (min-width: $mobile) {
      @content;
    }
  } @else if $range==mobile-only {
    @media (max-width: #{$tablet - 1}) {
      @content;
    }
  } @else if $range==tablet {
    @media (min-width: $tablet) {
      @content;
    }
  } @else if $range==tablet-only {
    @media (max-width: #{$desktop - 1}) {
      @content;
    }
  } @else if $range==desktop {
    @media (min-width: $desktop) {
      @content;
    }
  }
}

@mixin rippleCenter($colorHoverBg) {
  &:hover {
    background: $colorHoverBg
      radial-gradient(circle, transparent 1%, $colorHoverBg 1%) center/15000%;
  }

  &:active {
    background-color: $color-superLight-mainTheme;
    background-size: 100%;
    transition: background 0s;
  }
}

// -- mixins for progress words
@mixin size($width, $height) {
  height: $height;
  width: $width;
}

@mixin draw-progress($progress, $color) {
  .pie {
    .half-circle {
      border-color: $color;
    }

    .left-side {
      transform: rotate($progress * 3.6deg);
    }

    @if $progress <= 50 {
      .right-side {
        display: none;
      }
    } @else {
      clip: rect(auto, auto, auto, auto);

      .right-side {
        transform: rotate(180deg);
      }
    }
  }
}

@mixin draw-progress--solid($progress, $color, $bg-color) {
  background: linear-gradient(to right, $color 50%, $bg-color 50%);

  &:before {
    @if $progress <= 50 {
      background: $bg-color;
      transform: rotate((100 - (50 - $progress)) / 100 * 360deg * -1);
    } @else {
      background: $color;
      transform: rotate((100 - $progress) / 100 * 360deg);
    }
  }
}
